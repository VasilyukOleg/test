<?php


namespace PhpTutorial\test\arrayTests;


class Task_04_Test extends ArrayBase
{

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testEmpty()
    {
        $this->assertFalse($this->arrayTask->task_04([]));
    }

    public function dataProvider()
    {
        $provider = [];

        for ($i = 0; $i < 5; $i++) {
            $data = range(1, rand(3, 100));
            $stringCount = rand(1, 10);
            for ($k = 0; $k < $stringCount; $k++) {
                $data[] = $this->generateRandomString(rand(1,10));
            }
            // add duplicates
            for ($k = 0; $k < 5; $k++) {
                $data[] = $data[array_rand($data)];
            }
            shuffle($data);
           $provider[] = array($data);
        }
        return $provider;
    }

    /**
     * @dataProvider dataProvider
     * @param array $data
     */
    public function testTrue($data)
    {
        $this->assertTrue($this->arrayTask->task_04($data));
    }


    /**
     * @dataProvider dataProvider
     * @param array $data
     */
    public function testFalse($data)
    {
        $this->assertFalse($this->arrayTask->task_04(array_unique($data)));
    }
//
//    public function testString()
//    {
//        $this->markTestIncomplete();
//    }
}